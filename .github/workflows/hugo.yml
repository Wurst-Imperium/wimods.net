name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - "master"
    tags-ignore:
      - "**"
  schedule:
    # cron: minute, hour, day of month, month, day of week
    # Update the copyright year on Jan 1st
    - cron: "0 0 1 1 *"
  workflow_dispatch:
    inputs:
      distinct_id:
        description: "Automatically set by the return-dispatch action (leave blank if running manually)"
        required: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Echo distinct ID ${{ github.event.inputs.distinct_id }}
      run: echo ${{ github.event.inputs.distinct_id }}
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Hugo CLI
      run: |
        HUGO_VERSION=$(curl -sS https://api.github.com/repos/gohugoio/hugo/releases/latest \
          | grep tag_name | cut -d '"' -f 4 | cut -c 2-)
        curl -v -L -o ${{ runner.temp }}/hugo.deb \
          https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
    - name: Build with Hugo
      env:
        HUGO_ENVIRONMENT: production
      run: hugo --minify --baseURL "https://www.wimods.net/"
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: public/

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    - name: Purge Cloudflare cache
      run: |
        curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_PURGE_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'
