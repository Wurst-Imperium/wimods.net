name: Publish Snapshot Mod Ports
run-name: Publish mod ports for ${{ github.event.inputs.snapshot }}

on:
  workflow_dispatch:
    inputs:
      snapshot:
        description: "Minecraft version / branch name to publish from"
        required: true
      include_wurst:
        description: "Include Wurst Client"
        type: boolean
        required: false
        default: true
      include_wi_zoom:
        description: "Include WI Zoom"
        type: boolean
        required: false
        default: true
      include_mo_glass:
        description: "Include Mo Glass"
        type: boolean
        required: false
        default: true
      announce:
        description: "Announce the snapshot port(s) on WurstForum"
        type: boolean
        required: false
        default: true
      announce_only:
        description: "Only announce, don't publish"
        type: boolean
        required: false
        default: false


jobs:

  wurst:
    name: Wurst Client
    runs-on: ubuntu-latest
    if: ${{ inputs.include_wurst && !inputs.announce_only }}
    steps:
    - name: Build Wurst publish inputs
      id: wurst_inputs
      run: |
        JSON_STRING=$(cat << EOF
        {
          "close_milestone": "false",
          "upload_backups": "true",
          "publish_github": "true",
          "update_website": "true",
          "announce_backport": "false"
        }
        EOF
        )
        # Convert to single line and escape quotes
        echo "json=${JSON_STRING//$'\n'/}" >> "$GITHUB_OUTPUT"
    - name: Trigger publish workflow
      id: wurst_dispatch
      uses: codex-/return-dispatch@v2
      with:
        token: ${{ secrets.SNAPSHOT_MODS_ACTIONS_TOKEN }}
        owner: Wurst-Imperium
        repo: Wurst7
        ref: ${{ github.event.inputs.snapshot }}
        workflow: publish.yml
        workflow_inputs: ${{ steps.wurst_inputs.outputs.json }}
    - name: Wait for publish workflow to finish (run ${{ steps.wurst_dispatch.outputs.run_id }})
      uses: codex-/await-remote-run@v1
      with:
        token: ${{ secrets.SNAPSHOT_MODS_ACTIONS_TOKEN }}
        owner: Wurst-Imperium
        repo: Wurst7
        run_id: ${{ steps.wurst_dispatch.outputs.run_id }}
        run_timeout_seconds: 600  # 10 minutes

  wi_mods:
    runs-on: ubuntu-latest
    if: ${{ (inputs.include_wi_zoom || inputs.include_mo_glass) && !inputs.announce_only }}
    strategy:
      matrix:
        mod:
        - name: WI Zoom
          repo: WI-Zoom
          run: ${{ inputs.include_wi_zoom }}
        - name: Mo Glass
          repo: Mo-Glass
          run: ${{ inputs.include_mo_glass }}
      max-parallel: 1
    steps:
    - name: Skip if mod not included
      if: ${{ !matrix.mod.run }}
      run: exit 0
    - name: Build ${{ matrix.mod.name }} publish inputs
      id: mod_inputs
      run: |
        JSON_STRING=$(cat << EOF
        {
          "close_milestone": "false",
          "upload_backups": "true",
          "publish_github": "true",
          "publish_curseforge": "true",
          "publish_modrinth": "true",
          "update_website": "true"
        }
        EOF
        )
        # Convert to single line and escape quotes
        echo "json=${JSON_STRING//$'\n'/}" >> "$GITHUB_OUTPUT"
    - name: Trigger publish workflow
      id: mod_dispatch
      uses: codex-/return-dispatch@v2
      with:
        token: ${{ secrets.SNAPSHOT_MODS_ACTIONS_TOKEN }}
        owner: Wurst-Imperium
        repo: ${{ matrix.mod.repo }}
        ref: ${{ github.event.inputs.snapshot }}
        workflow: publish.yml
        workflow_inputs: ${{ steps.mod_inputs.outputs.json }}
    - name: Wait for publish workflow to finish (run ${{ steps.mod_dispatch.outputs.run_id }})
      uses: codex-/await-remote-run@v1
      with:
        token: ${{ secrets.SNAPSHOT_MODS_ACTIONS_TOKEN }}
        owner: Wurst-Imperium
        repo: ${{ matrix.mod.repo }}
        run_id: ${{ steps.mod_dispatch.outputs.run_id }}
        run_timeout_seconds: 600  # 10 minutes

  announce:
    runs-on: ubuntu-latest
    needs: [wurst, wi_mods]
    if: ${{ !failure() && !cancelled() && inputs.announce }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: "pip"
        cache-dependency-path: scripts/requirements.txt
    - name: Install dependencies
      run: pip install -r scripts/requirements.txt
    - name: Run announce_snapshot_ports.py
      env:
        WURSTFORUM_TOKEN: ${{ secrets.WF_BOT_TOKEN }}
      run: |
        python scripts/announce_snapshot_ports.py \
          ${{ github.event.inputs.snapshot }} \
          ${{ inputs.include_wurst && 'wurst7' || '' }} \
          ${{ inputs.include_wi_zoom && 'wi-zoom' || '' }} \
          ${{ inputs.include_mo_glass && 'mo-glass' || '' }}
